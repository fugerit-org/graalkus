<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.fugerit.java.demo</groupId>
  <artifactId>graalkus</artifactId>
  <version>1.3.1-SNAPSHOT</version>
  <description>Graalkus: Let Quarkus fly high with GraalVM.</description>
  <properties>
    <maven.compiler.release>21</maven.compiler.release>
    <surefire-plugin.version>3.3.1</surefire-plugin.version>
    <quarkus.platform.version>3.18.2</quarkus.platform.version>
    <skipITs>true</skipITs>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
    <compiler-plugin.version>3.13.0</compiler-plugin.version>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <fj-doc-version>8.11.9</fj-doc-version>
    <quarkus.platform.group-id>io.quarkus</quarkus.platform.group-id>
    <base-native-build-args>-H:IncludeResources=graalkus/fm-doc-process-config.xml,-H:IncludeResources=graalkus/template/document.ftl</base-native-build-args>
    <quarkus.native.additional-build-args>${base-native-build-args}</quarkus.native.additional-build-args>
    <!-- formatter plugin -->
    <mvn-formatter-plugin-version>2.24.1</mvn-formatter-plugin-version>
    <fugerit-code-rules-version>0.1.1</fugerit-code-rules-version>
    <format.skip>false</format.skip>
    <maven.compiler.proc>full</maven.compiler.proc>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>${quarkus.platform.artifact-id}</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.fugerit.java</groupId>
        <artifactId>fj-doc</artifactId>
        <version>${fj-doc-version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-rest</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-rest-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-openapi</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-config-yaml</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-arc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-openshift</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-info</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.fugerit.java</groupId>
      <artifactId>fj-doc-base</artifactId>
      <exclusions>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.fugerit.java</groupId>
      <artifactId>fj-doc-freemarker</artifactId>
      <exclusions>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.fugerit.java</groupId>
      <artifactId>fj-doc-mod-opencsv</artifactId>
      <exclusions>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.platform.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
              <goal>native-image-agent</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <configuration>
          <parameters>true</parameters>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <systemPropertyVariables>
            <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.fugerit.java</groupId>
        <artifactId>fj-doc-maven-plugin</artifactId>
        <version>${fj-doc-version}</version>
        <executions>
          <execution>
            <id>freemarker-verify</id>
            <phase>compile</phase>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <templateBasePath>${project.basedir}/src/main/resources/graalkus/template</templateBasePath>
          <generateReport>true</generateReport>
          <failOnErrors>true</failOnErrors>
          <reportOutputFolder>${project.build.directory}/freemarker-syntax-verify-report</reportOutputFolder>
        </configuration>
      </plugin>
      <plugin>
        <groupId>net.revelc.code.formatter</groupId>
        <artifactId>formatter-maven-plugin</artifactId>
        <version>${mvn-formatter-plugin-version}</version>
        <dependencies>
          <dependency>
            <groupId>org.fugerit.java</groupId>
            <artifactId>fugerit-code-rules</artifactId>
            <version>${fugerit-code-rules-version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <configFile>org/fugerit/java/coderules/eclipse-format.xml</configFile>
          <skip>${format.skip}</skip>
        </configuration>
        <executions>
          <execution>
            <id>format-sources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>instrumented</id>
      <build>
        <finalName>${project.artifactId}-${project.version}-instrumented</finalName>
      </build>
      <properties>
        <quarkus.native.additional-build-args>${base-native-build-args},--pgo-instrument</quarkus.native.additional-build-args>
      </properties>
    </profile>
    <profile>
      <id>optimized</id>
      <build>
        <finalName>${project.artifactId}-${project.version}-optimized</finalName>
      </build>
      <properties>
        <quarkus.package.jar.enabled>false</quarkus.package.jar.enabled>
        <quarkus.native.additional-build-args>${base-native-build-args},--pgo=${project.basedir}/default.iprof</quarkus.native.additional-build-args>
      </properties>
    </profile>
    <profile>
      <id>jit</id>
      <activation>
        <property>
          <name>!native</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.fugerit.java</groupId>
          <artifactId>fj-doc-mod-fop</artifactId>
          <exclusions>
            <exclusion>
              <groupId>xml-apis</groupId>
              <artifactId>xml-apis</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <properties>
        <quarkus.package.jar.enabled>false</quarkus.package.jar.enabled>
        <skipITs>true</skipITs>
        <quarkus.native.enabled>true</quarkus.native.enabled>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.fugerit.java</groupId>
          <artifactId>fj-doc-mod-fop</artifactId>
          <scope>provided</scope>
          <exclusions>
            <exclusion>
              <groupId>xml-apis</groupId>
              <artifactId>xml-apis</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>docs</id>
      <properties>
        <!-- asciidoc properties -->
        <asciidoctor.maven.plugin.version>3.1.1</asciidoctor.maven.plugin.version>
        <asciidoctorj.pdf.version>2.3.19</asciidoctorj.pdf.version>
        <asciidoctorj.version>3.0.0</asciidoctorj.version>
        <asciidoctorj.diagram.version>2.3.1</asciidoctorj.diagram.version>
        <asciidoctorj.diagram-plantuml.version>1.2024.5</asciidoctorj.diagram-plantuml.version>
        <asciidoctorj.diagram-ditaamini.version>1.0.3</asciidoctorj.diagram-ditaamini.version>
        <jruby.version>9.4.9.0</jruby.version>
        <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss'Z'</maven.build.timestamp.format>
        <pdf-output-folder>${project.build.directory}/site/book</pdf-output-folder>
        <html-output-folder>${project.build.directory}/site/book</html-output-folder>
      </properties>
      <build>
        <defaultGoal>process-resources</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctor-maven-plugin</artifactId>
            <version>${asciidoctor.maven.plugin.version}</version>
            <dependencies>
              <dependency>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctorj-pdf</artifactId>
                <version>${asciidoctorj.pdf.version}</version>
              </dependency>
              <!-- Comment this section to use the default jruby artifact provided by the plugin -->
              <dependency>
                <groupId>org.jruby</groupId>
                <artifactId>jruby</artifactId>
                <version>${jruby.version}</version>
              </dependency>
              <!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
              <dependency>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctorj</artifactId>
                <version>${asciidoctorj.version}</version>
              </dependency>
              <dependency>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctorj-diagram</artifactId>
                <version>${asciidoctorj.diagram.version}</version>
              </dependency>
              <dependency>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctorj-diagram-plantuml</artifactId>
                <version>${asciidoctorj.diagram-plantuml.version}</version>
              </dependency>
              <dependency>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctorj-diagram-ditaamini</artifactId>
                <version>${asciidoctorj.diagram-ditaamini.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <requires>
                <require>asciidoctor-diagram</require>
              </requires>
              <resources>
                <resource>
                  <directory>src/main/docs/asciidoc</directory>
                  <excludes>
                    <exclude>resources/themes/**</exclude>
                  </excludes>
                </resource>
              </resources>
              <sourceDirectory>src/main/docs/asciidoc</sourceDirectory>
              <enableVerbose>true</enableVerbose>
              <logHandler>
                <outputToConsole>true</outputToConsole>
              </logHandler>
              <!-- Attributes common to all output formats -->
              <attributes>
                <attribute-missing>warn</attribute-missing>
                <allow-uri-read>true</allow-uri-read>
                <source-highlighter>rouge</source-highlighter>
                <imagesdir>./resources/images</imagesdir>
                <themesdir>./resources/themes</themesdir>
                <revnumber>${project.version}</revnumber>
                <revdate>${maven.build.timestamp}</revdate>
                <revremark>Digital Version</revremark>
                <organization>${project.organization.name}</organization>
              </attributes>
            </configuration>
            <executions>
              <execution>
                <id>asciidoc-to-pdf</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <configuration>
                  <backend>pdf</backend>
                  <doctype>book</doctype>
                  <sourceDocumentName>index.adoc</sourceDocumentName>
                  <outputDirectory>${pdf-output-folder}</outputDirectory>
                  <outputFile>${project.artifactId}.pdf</outputFile>
                  <attributes>
                    <pdf-theme>basic</pdf-theme>
                    <pdf-themesdir>${project.basedir}/src/main/docs/asciidoc/resources/themes</pdf-themesdir>
                    <icons>font</icons>
                    <pagenums />
                    <toc />
                    <idprefix />
                    <idseparator>-</idseparator>
                  </attributes>
                </configuration>
              </execution>
              <execution>
                <id>asciidoc-to-html</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <configuration>
                  <backend>html5</backend>
                  <outputDirectory>${html-output-folder}</outputDirectory>
                  <!--
                  Scenarios for linking vs embedding assets:

                  Link to both stylesheets and images::

                    - don't set embedAssets option
                    - set linkcss attribute to true
                    - set imagesdir attribute to path relative to AsciiDoc source file

                    <attributes>
                        <linkcss>true</linkcss>
                        <imagesdir>./images</imagesdir>
                    </attributes>

                  Embed stylesheets and images::

                    - set embedAssets option to true
                    - don't set linkcss attribute
                    - set imagesdir attribute to path relative to project root

                    <embedAssets>true</embedAssets>
                    <attributes>
                        <imagesdir>src/docs/asciidoc/images</imagesdir>
                    </attributes>

                  Link to stylesheets but embed images::

                    - set embedAssets option to true
                    - set linkcss attribute to true
                    - set imagesdir attribute to path relative to project root

                    <embedAssets>true</embedAssets>
                    <attributes>
                        <linkcss>true</linkcss>
                        <imagesdir>src/docs/asciidoc/images</imagesdir>
                    </attributes>

                  Embed stylesheets but link images (default)::

                    - don't set embedAssets option
                    - don't set linkcss attribute
                    - set imagesdir attribute to path relative to AsciiDoc source file

                    <attributes>
                        <imagesdir>./images</imagesdir>
                    </attributes>

                  IMPORTANT: When you enable image embedding, you must qualify the path with imagesdir, as shown above.
                  -->
                  <attributes>
                    <source-highlighter>rouge</source-highlighter>
                    <imagesdir>resources/images</imagesdir>
                    <toc>left</toc>
                    <icons>font</icons>
                    <sectanchors>true</sectanchors>
                    <!-- set the idprefix to blank -->
                    <idprefix />
                    <idseparator>-</idseparator>
                    <docinfo1>true</docinfo1>
                  </attributes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>


    <profile>
      <id>slidev</id>
      <properties>
        <exec-plugin.version>3.5.0</exec-plugin.version>
        <slidev-base-folder>${project.basedir}/src/main/docs/slidev/graalkus</slidev-base-folder>
        <slidev-base-path>/graalkus-slidev</slidev-base-path>
      </properties>
      <build>
        <defaultGoal>process-resources</defaultGoal>
        <plugins>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>${exec-plugin.version}</version>
            <executions>
              <!-- Required: The following will ensure `npm install` is called
           before anything else during the 'Default Lifecycle' -->
              <execution>
                <id>npm install (initialize)</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>initialize</phase>
                <configuration>
                  <executable>npm</executable>
                  <arguments>
                    <argument>install</argument>
                    <argument>--legacy-peer-deps</argument>
                  </arguments>
                  <workingDirectory>${slidev-base-folder}</workingDirectory>
                </configuration>
              </execution>
              <!-- Required: The following will ensure `npm install` is called
           before anything else during the 'Clean Lifecycle' -->
              <execution>
                <id>npm install (clean)</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>pre-clean</phase>
                <configuration>
                  <executable>npm</executable>
                  <arguments>
                    <argument>install</argument>
                    <argument>--legacy-peer-deps</argument>
                  </arguments>
                  <workingDirectory>${slidev-base-folder}</workingDirectory>
                </configuration>
              </execution>

              <!-- Required: This following calls `npm run build` where 'build' is
           the script name I used in my project, change this if yours is
               different -->
              <execution>
                <id>npm run build (compile)</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>generate-sources</phase>
                <configuration>
                  <executable>npm</executable>
                  <arguments>
                    <argument>run</argument>
                    <argument>build</argument>
                  </arguments>
                  <workingDirectory>${slidev-base-folder}</workingDirectory>
                </configuration>
              </execution>

            </executions>

          </plugin>

        </plugins>
      </build>
    </profile>

    <!-- sonar scan and coverage -->
    <profile>
      <id>sonarfugerit</id>
      <properties>
        <!-- sonar cloud configuration -->
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.organization>fugerit-org</sonar.organization>
        <sonar.moduleKey>${project.artifactId}</sonar.moduleKey>
        <!-- sonar.projectKey must be added by the project -->
      </properties>
    </profile>
    <profile>
      <id>coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skipTests>false</skipTests>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <phase>test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
